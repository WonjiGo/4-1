
(base) C:\Users\WonJi Go>python
Python 3.12.7 | packaged by Anaconda, Inc. | (main, Oct  4 2024, 13:17:27) [MSC v.1929 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import pandas as pd
>>>
>>> # CSV 파일 읽기
>>> data = pd.read_csv('C:/Users/WonJi Go/Downloads/world_tourism_economy_data1.csv')
>>>
>>> # 데이터의 첫 5행 출력
>>> print(data.head())
                       country country_code  year  ...           gdp   inflation  unemployment
0                        Aruba          ABW  1999  ...  1.722905e+09    2.280372           NaN
1  Africa Eastern and Southern          AFE  1999  ...  2.654290e+11    7.819865           NaN
2                  Afghanistan          AFG  1999  ...           NaN         NaN           NaN
3   Africa Western and Central          AFW  1999  ...  1.394680e+11    0.372266           NaN
4                       Angola          AGO  1999  ...  6.152923e+09  248.195902           NaN

[5 rows x 11 columns]
>>> # 필요한 라이브러리 불러오기
>>> import pandas as pd
>>> from sklearn.impute import SimpleImputer
>>> from sklearn.preprocessing import MinMaxScaler
>>>
>>> # 엑셀 파일 불러오기 (CSV 파일을 불러오는 방법)
>>> data = pd.read_csv('C:/Users/WonJi Go/Downloads/world_tourism_economy_data1.csv')
>>>
>>> # 1. 결측값 처리
>>> # 'tourism_arrivals'의 결측값이 있는 행 제거
>>> data_cleaned = data.dropna(subset=['tourism_arrivals'])
>>>
>>> # 독립 변수들의 결측값을 중앙값으로 대체
>>> imputer = SimpleImputer(strategy='median')
>>> data_cleaned[['tourism_receipts', 'tourism_exports', 'gdp', 'inflation', 'unemployment']] = imputer.fit_transform(
...     data_cleaned[['tourism_receipts', 'tourism_exports', 'gdp', 'inflation', 'unemployment']]
... )
<stdin>:1: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
>>>
>>> # 2. 필요 없는 열 제거 (예: country, country_code, year)
>>> data_cleaned = data_cleaned.drop(columns=['country', 'country_code', 'year'])
>>>
>>> # 3. 독립 변수(X)와 종속 변수(y) 분리
>>> X = data_cleaned[['tourism_receipts', 'tourism_exports', 'gdp', 'inflation', 'unemployment']]
>>> y = data_cleaned['tourism_arrivals']
>>>
>>> # 4. 데이터 스케일링 (독립 변수 X)
>>> scaler = MinMaxScaler()  # MinMaxScaler로 [0, 1] 범위로 스케일링
>>> X_scaled = scaler.fit_transform(X)
>>>
>>> # 5. 결과 확인 (전처리 완료된 데이터 확인)
>>> print("전처리 완료된 독립 변수 데이터 (첫 5행):")
전처리 완료된 독립 변수 데이터 (첫 5행):
>>> print(X_scaled[:5])  # 첫 5행 출력
[[4.19683663e-04 6.13360993e-01 1.93867556e-05 3.33414848e-02
  1.77758107e-01]
 [4.31229612e-03 1.19677822e-01 3.01095154e-03 4.29911350e-02
  1.77758107e-01]
 [7.74803375e-04 3.89690499e-02 1.58201039e-03 3.00176148e-02
  1.77758107e-01]
 [1.65855291e-05 5.71662696e-03 6.96422747e-05 4.61719850e-01
  1.77758107e-01]
 [1.16957501e-04 5.48890923e-01 3.62808968e-05 3.00475271e-02
  4.92502884e-01]]
>>>
>>> print("종속 변수 데이터 (첫 5행):")
종속 변수 데이터 (첫 5행):
>>> print(y.head())  # 종속 변수 첫 5행 출력
0    9.720000e+05
1    1.530938e+07
3    3.897975e+06
4    4.500000e+04
5    3.710000e+05
Name: tourism_arrivals, dtype: float64
>>> # 필요한 라이브러리 불러오기
>>> from sklearn.linear_model import LinearRegression
>>> from sklearn.model_selection import train_test_split
>>> from sklearn.metrics import mean_squared_error, r2_score
>>>
>>> # 1. 데이터 나누기 (학습용 80%, 테스트용 20%)
>>> X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)
>>>
>>> # 2. 선형 회귀 모델 생성 및 학습
>>> model = LinearRegression()
>>> model.fit(X_train, y_train)
LinearRegression()
>>>
>>> # 3. 예측 수행
>>> y_pred = model.predict(X_test)
>>>
>>> # 4. 성능 평가
>>> mse = mean_squared_error(y_test, y_pred)
>>> r2 = r2_score(y_test, y_pred)
>>>
>>> # 결과 출력
>>> print("평균 제곱 오차(MSE):", mse)
평균 제곱 오차(MSE): 4444992983803212.0
>>> print("설명력 (R²):", r2)
설명력 (R²): 0.8979336270611821
>>> from sklearn.model_selection import cross_val_score
>>> from sklearn.linear_model import LinearRegression
>>>
>>> # 1. 선형 회귀 모델 생성
>>> model = LinearRegression()
>>>
>>> # 2. 교차 검증 (5-fold 교차 검증)
>>> cv_scores = cross_val_score(model, X_scaled, y, cv=5, scoring='neg_mean_squared_error')
>>>
>>> # 3. 교차 검증 결과 출력
>>> print("교차 검증 결과 (MSE, 음수 값으로 출력됨):")
교차 검증 결과 (MSE, 음수 값으로 출력됨):
>>> print(cv_scores)
[-5.25037417e+15 -4.13941200e+15 -2.79862459e+15 -3.73420552e+15
 -4.61853284e+15]
>>>
>>> # 4. 평균 MSE와 표준편차 출력
>>> mean_cv_score = -cv_scores.mean()  # MSE는 음수로 반환되므로 부호를 바꿔줌
>>> std_cv_score = cv_scores.std()
>>>
>>> print(f"교차 검증 평균 MSE: {mean_cv_score:.2f}")
교차 검증 평균 MSE: 4108229826140545.50
>>> print(f"교차 검증 표준편차: {std_cv_score:.2f}")
교차 검증 표준편차: 827143911994550.12
>>> # 필요한 라이브러리 불러오기
>>> import numpy as np
>>> from sklearn.utils import resample
>>> from sklearn.linear_model import LinearRegression
>>> from sklearn.metrics import mean_squared_error, r2_score
>>>
>>> # 1. 모델 생성
>>> model = LinearRegression()
>>>
>>> # 2. 부트스트래핑을 통해 모델 평가
>>> n_iterations = 1000  # 반복 횟수 (샘플링 횟수)
>>> mse_scores = []  # MSE를 저장할 리스트
>>> r2_scores = []  # R²를 저장할 리스트
>>>
>>> for _ in range(n_iterations):
...     # 부트스트랩 샘플링 (복원 추출)
...     X_resampled, y_resampled = resample(X_train, y_train, random_state=42)
...
...     # 모델 학습
...     model.fit(X_resampled, y_resampled)
...
...     # 예측 수행
...     y_pred = model.predict(X_test)
...
...     # 성능 평가
...     mse = mean_squared_error(y_test, y_pred)
...     r2 = r2_score(y_test, y_pred)
...
...     # 평가 결과 저장
...     mse_scores.append(mse)
...     r2_scores.append(r2)
...
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
LinearRegression()
>>> # 3. 결과 출력
>>> mean_mse = np.mean(mse_scores)
>>> mean_r2 = np.mean(r2_scores)
>>>
>>> std_mse = np.std(mse_scores)
>>> std_r2 = np.std(r2_scores)
>>>
>>> print(f"부트스트래핑 평균 MSE: {mean_mse:.2f}")
부트스트래핑 평균 MSE: 4477722869395665.50
>>> print(f"부트스트래핑 표준편차 (MSE): {std_mse:.2f}")
부트스트래핑 표준편차 (MSE): 1.00
>>> print(f"부트스트래핑 평균 R²: {mean_r2:.2f}")
부트스트래핑 평균 R²: 0.90
>>> print(f"부트스트래핑 표준편차 (R²): {std_r2:.2f}")
부트스트래핑 표준편차 (R²): 0.00
>>>